/*
 * Frame to show logging information during runtime
 * Christoph Bodenstein
 * TU-Ilmenau, FG SSE
 */
package toe;

/**
 *
 * @author sse
 */
public class LogFrame extends javax.swing.JFrame {

    /**
     * Creates new form LogFrame
     */
    public LogFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemClearLogWindow = new javax.swing.JMenuItem();

        setTitle("Log Viewer");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(java.awt.Toolkit.getDefaultToolkit().getScreenSize());
        setMinimumSize(new java.awt.Dimension(650, 300));
        setName("LogFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(650, 300));

        jTextAreaLog.setEditable(false);
        jTextAreaLog.setColumns(50);
        jTextAreaLog.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextAreaLog.setRows(20);
        jTextAreaLog.setDoubleBuffered(true);
        jScrollPane1.setViewportView(jTextAreaLog);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jMenu2.setText("Edit");

        jMenuItemClearLogWindow.setText("Clear");
        jMenuItemClearLogWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClearLogWindowActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemClearLogWindow);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        getAccessibleContext().setAccessibleParent(jTextAreaLog);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemClearLogWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClearLogWindowActionPerformed
        this.clearText();
    }//GEN-LAST:event_jMenuItemClearLogWindowActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemClearLogWindow;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaLog;
    // End of variables declaration//GEN-END:variables

    /**
     * Append text to logframe Textfield
     *
     * @param s String to add to logframe textfield
     */
    public void addText(String s) {
        this.jTextAreaLog.append(System.getProperty("line.separator"));
        this.jTextAreaLog.append(s);
        this.jTextAreaLog.setCaretPosition(jTextAreaLog.getDocument().getLength() - s.length());
    }

    /**
     * Empty Texfield. Delete complete log.
     */
    public void clearText() {
        this.jTextAreaLog.setText("");
    }

}
